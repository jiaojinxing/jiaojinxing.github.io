<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[JinXing’s blog]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="jiaojinxing.github.io/"/>
  <updated>2015-06-04T03:15:49.339Z</updated>
  <id>jiaojinxing.github.io/</id>
  
  <author>
    <name><![CDATA[jiaojinxing]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="jiaojinxing.github.io/2015/06/04/hello-world/"/>
    <id>jiaojinxing.github.io/2015/06/04/hello-world/</id>
    <published>2015-06-04T03:15:49.339Z</published>
    <updated>2015-06-04T03:15:49.339Z</updated>
    <content type="html"><![CDATA[<p>Markdown 编辑器：<a href="https://stackedit.io/editor" target="_blank" rel="external">https://stackedit.io/editor</a>   <a href="https://www.zybuluo.com/mdeditor（在线）" target="_blank" rel="external">https://www.zybuluo.com/mdeditor（在线）</a> </p>
<p>Markdown 语法：<a href="http://wowubuntu.com/markdown/（中文）" target="_blank" rel="external">http://wowubuntu.com/markdown/（中文）</a></p>
<p>github page 博客不支持的 Markdown 编辑器语法有: 注脚、flow 流程图、seq 序列图</p>
<p>plantuml 语法：<a href="http://plantuml.sourceforge.net/" target="_blank" rel="external">http://plantuml.sourceforge.net/</a></p>
<p>PC 上使用 Eclipse 插件 plantuml - <a href="http://plantuml.sourceforge.net/updatesite/" target="_blank" rel="external">http://plantuml.sourceforge.net/updatesite/</a> </p>
<p>plantuml 生成 UML 图的例子：</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">&#123;% plantuml %&#125;</span><br><span class="line"></span><br><span class="line"><span class="annotation">@startuml</span></span><br><span class="line">Alice -&gt; <span class="string">Bob:</span> Authentication Request</span><br><span class="line">Bob --&gt; <span class="string">Alice:</span> Authentication Response</span><br><span class="line"></span><br><span class="line">Alice -&gt; <span class="string">Bob:</span> Another authentication Request</span><br><span class="line">Alice &lt;-- <span class="string">Bob:</span> another authentication Response</span><br><span class="line"><span class="annotation">@enduml</span></span><br><span class="line"></span><br><span class="line">&#123;% endplantuml %&#125;</span><br></pre></td></tr></table></figure>
<img src="http://www.plantuml.com/plantuml/svg/TSx13O0W38NXErDqWIvWZ057S0F49f9WKIZxIyIJmVFxykVfB3P9EO8omJi2d62Ewm2co4uitbdnaM6Xgr0MLJV0QXxSKVcCd4bzOnohIs3xqOP7nARjdtxZcdYhXsy0">
<p>plantuml 使用 DOT 语法生成流程图的例子：</p>
<figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line">&#123;% plantuml %&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">@startuml</span></span><br><span class="line"><span class="label">digraph</span> G &#123;</span><br><span class="line">    <span class="keyword">subgraph </span>cluster0 &#123;</span><br><span class="line">        node [style<span class="label">=filled</span>,color<span class="label">=white</span>]<span class="comment">;</span></span><br><span class="line">        style<span class="label">=filled</span><span class="comment">;</span></span><br><span class="line">        color<span class="label">=lightgrey</span><span class="comment">;</span></span><br><span class="line">        a0 -&gt; <span class="literal">a1</span> -&gt; <span class="literal">a2</span> -&gt; <span class="literal">a3</span><span class="comment">;</span></span><br><span class="line">        label = <span class="string">"process #1"</span><span class="comment">;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">subgraph </span>cluster1 &#123;</span><br><span class="line">        node [style<span class="label">=filled</span>]<span class="comment">;</span></span><br><span class="line">        <span class="keyword">b0 </span>-&gt; <span class="keyword">b1 </span>-&gt; <span class="keyword">b2 </span>-&gt; <span class="keyword">b3;</span><br><span class="line"></span>        label = <span class="string">"process #2"</span><span class="comment">;</span></span><br><span class="line">        color<span class="label">=blue</span></span><br><span class="line">    &#125;</span><br><span class="line">    start -&gt; a0<span class="comment">;</span></span><br><span class="line">    start -&gt; <span class="keyword">b0;</span><br><span class="line"></span>    <span class="literal">a1</span> -&gt; <span class="keyword">b3;</span><br><span class="line"></span>    <span class="keyword">b2 </span>-&gt; <span class="literal">a3</span><span class="comment">;</span></span><br><span class="line">    <span class="literal">a3</span> -&gt; a0<span class="comment">;</span></span><br><span class="line">    <span class="literal">a3</span> -&gt; <span class="preprocessor">end</span><span class="comment">;</span></span><br><span class="line">    <span class="keyword">b3 </span>-&gt; <span class="preprocessor">end</span><span class="comment">;</span></span><br><span class="line">    start [shape<span class="label">=Mdiamond</span>]<span class="comment">;</span></span><br><span class="line">    <span class="preprocessor">end</span> [shape<span class="label">=Msquare</span>]<span class="comment">;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">@enduml</span></span><br><span class="line"></span><br><span class="line">&#123;% endplantuml %&#125;</span><br></pre></td></tr></table></figure>
<img src="http://www.plantuml.com/plantuml/svg/VL7BReD03Bpp5HQvfX8anuWgjvxo1QW76rnOoM79FbH5KVuzi4i2L5LyiEJnxCxOFbg7nlcp9BLg3FOjVC4jWI6ifmXKugrZaqtu69sk6KhhhiB5ZnBXUbjfqQRuRPNZxyEBkAJCQEIAQbhN6BxE3SpWunCm3taNydxk2X8B593sHbTiBMpoD7Rl_phEtpfUkAGWIq6MWYozbTsbVsSXyRnqCYursCyEQu0c8CxubA7LhBXVFeqLTzF-Q5t6ZqlROi_5gLPurjrpj87qwjYBHpDUvfuS1tmu-0C0">
<p>也可以使用 Graphviz <a href="http://www.graphviz.org/" target="_blank" rel="external">http://www.graphviz.org/</a> ，而不使用 plantuml 插件，但只能用 DOT 语法。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Markdown 编辑器：<a href="https://stackedit.io/editor" target="_blank" rel="external">https://stackedit.io/editor</a>   <a href="https://www.]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[SylixOS线程]]></title>
    <link href="jiaojinxing.github.io/2015/06/02/SylixOS-thread/"/>
    <id>jiaojinxing.github.io/2015/06/02/SylixOS-thread/</id>
    <published>2015-06-02T07:45:26.766Z</published>
    <updated>2015-06-02T07:45:26.766Z</updated>
    <content type="html"><![CDATA[<h2 id="线程">线程</h2><p>线程是程序中的一条独立的控制流，线程是SylixOS调度器进行任务调度的基本单位，每个线程都有一个独一无二的ID号、栈、线程控制块（TCB）。</p>
<p>为了管理线程，SylixOS会为每一个线程分配一个线程控制块，用于记录该线程的信息，如线程入口函数、线程优化级、线程名字、线程当前的堆栈指针等。</p>
<p>线程入口函数可以调用其它函数，函数内定义的局部变量将从它自己的栈里分配，所以不同的线程可以有相同的线程入口函数，但又独立运行。</p>
<p>线程栈可以由用户自己分配，也可以操作系统代为分配，线程栈的大小不应改过少（容易造成栈溢出），也不应该过大（造成浪费）。</p>
<p>线程ID在线程被创建时决定，是线程的标识符。</p>
<p>线程优先级和调度策略是SylixOS调度器进行任务调度的参数，SylixOS是一个实时操作系统（RTOS），始终运行一个优先级最高的就绪态任务。</p>
<h2 id="线程的基本状态">线程的基本状态</h2><p>线程的基本状态有如下几种：</p>
<ol>
<li>初始化          创建线程过程中线程的状态</li>
<li>就绪            线程可以运行的状态</li>
<li>等待            线程需要等行某些事件而不能继续的状态</li>
<li>僵死状态        线程退出后处理的状态</li>
</ol>
<p><img src="/img/SylixOS-thread/threadstatus.png" alt="threadstatus.png"></p>
<h2 id="线程优先级">线程优先级</h2><p>线程优先级的范围处决于操作系统的配置，默认是0~255，0是最高优先级，255是最低优先级:</p>
<figure class="highlight gherkin"><table><tr><td class="code"><pre><span class="line"><span class="comment">#define LW_PRIO_HIGHEST         0                                       /*  SylixOS 最高优先级          */</span></span><br><span class="line"><span class="comment">#define LW_PRIO_LOWEST          255                                     /*  SylixOS 最低优先级          */</span></span><br><span class="line"></span><br><span class="line">/<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line">    优先级 (一般应用的最高优先级不能高于 LW_PRIO_CRITICAL 最低不能低过 LW_PRIO_LOW)</span><br><span class="line"><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>/</span><br><span class="line">     </span><br><span class="line"><span class="comment">#define LW_PRIO_EXTREME         LW_PRIO_HIGHEST                         /*  最高优先级                  */</span></span><br><span class="line"><span class="comment">#define LW_PRIO_CRITICAL        50                                      /*  关键处理任务                */</span></span><br><span class="line"><span class="comment">#define LW_PRIO_REALTIME        100                                     /*  实时处理任务                */</span></span><br><span class="line"><span class="comment">#define LW_PRIO_HIGH            150                                     /*  高优先级任务                */</span></span><br><span class="line"><span class="comment">#define LW_PRIO_NORMAL          200                                     /*  正常优先级                  */</span></span><br><span class="line"><span class="comment">#define LW_PRIO_LOW             250                                     /*  低优先级                    */</span></span><br><span class="line"><span class="comment">#define LW_PRIO_IDLE            LW_PRIO_LOWEST                          /*  最低优先级                  */</span></span><br></pre></td></tr></table></figure>
<h2 id="线程调度策略">线程调度策略</h2><p>SylixOS支持同优先级线程，同优先级线程的调度策略取决于当前线程的调度策略，如果当前线程的调度策略为先来先服务（FIFO），</p>
<p>那么必须等当前线程的阻塞时，同优先级的其它线程才有机会运行；如果当前线程的调度策略为轮转（RR），</p>
<p>则当当前线程的时间片用完时或当前线程的阻塞时，同优先级的其它线程才有机会运行。</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="hexcolor">#def</span>ine  LW_OPTION_SCHED_FIFO                           <span class="number">0</span>x01            <span class="comment">/*  调度器 FIFO                 */</span></span><br><span class="line"><span class="hexcolor">#def</span>ine  LW_OPTION_SCHED_RR                             <span class="number">0</span>x00            <span class="comment">/*  调度器 RR                   */</span></span><br></pre></td></tr></table></figure>
<h2 id="线程相关_API">线程相关 API</h2><p>SylixOS 提供了一套 POSIX 线程 API，其接口定义和行为完全符合 POSIX 线程标准，方便了现有 POSIX 程序移植到 SylixOS 上，</p>
<p>关于 POSIX 线程的编程，市面上有很多书籍，网上也已经有很多资料，这里不再详述，POSIX 线程的编程可以参考这篇文章 <a href="https://computing.llnl.gov/tutorials/pthreads/" target="_blank" rel="external">https://computing.llnl.gov/tutorials/pthreads/</a></p>
<p>SylixOS 系统内部线程 API 的命名一般以 API_Thread 开始，API 的声明位于 libsylixos/SylixOS/kernel/include/k_api.h 文件，</p>
<p>为了适应不同语言习惯的人，也提供了一套以 Lw_ 开头的 API，请查看 libsylixos/SylixOS/api 目录下的头文件。</p>
<h2 id="内部线程_API_相关的数据类型">内部线程 API 相关的数据类型</h2><figure class="highlight gherkin"><table><tr><td class="code"><pre><span class="line">线程句柄  LW_OBJECT_HANDLE</span><br><span class="line">线程 ID   LW_OBJECT_ID</span><br><span class="line">线程属性  LW_CLASS_THREADATTR，<span class="keyword">*</span>PLW_CLASS_THREADATTR</span><br><span class="line">线程函数  PTHREAD_START_ROUTINE</span><br></pre></td></tr></table></figure>
<p>其中 线程函数 PTHREAD_START_ROUTINE 的类型需要理解，它被定义为如下的函数指针：</p>
<figure class="highlight lisp"><table><tr><td class="code"><pre><span class="line">typedef PVOID       <span class="list">(<span class="keyword">*PTHREAD_START_ROUTINE</span>)</span><span class="list">(<span class="keyword">PVOID</span> pvArg)</span><span class="comment">;              /*  系统线程类型定义            */</span></span><br></pre></td></tr></table></figure>
<p>所以线程函数一般形如：</p>
<figure class="highlight inform7"><table><tr><td class="code"><pre><span class="line">PVOID  thread_func (PVOID pvArg)</span><br><span class="line">&#123;</span><br><span class="line">    // do <span class="keyword">thing</span>...</span><br><span class="line">    return  NULL;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="一分钟实验">一分钟实验</h2><figure class="highlight openscad"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">#</span><span class="preprocessor"><span class="keyword">include</span> &lt;SylixOS.h&gt;</span> <span class="comment">// 包含 SylixOS.h 头文件</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">/*</span><br><span class="line">  * 测试用线程函数</span><br><span class="line"> */</span></span><br><span class="line">PVOID  TestThread <span class="params">(PVOID  pvArg)</span></span><br><span class="line">&#123;</span><br><span class="line">    while <span class="params">(<span class="number">1</span>)</span> &#123;</span><br><span class="line">     		printf<span class="params">(<span class="string">"hello in thread\n"</span>)</span>;</span><br><span class="line">     		sleep<span class="params">(<span class="number">1</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">     </span><br><span class="line">LW_OBJECT_HANDLE  hThread; <span class="comment">// 定义线程句柄</span></span><br><span class="line">      </span><br><span class="line">hThread = API_ThreadCreate<span class="params">(<span class="string">"t_test"</span>, TestThread, NULL, NULL)</span>; <span class="comment">// 创建一个名为 t_test 的线程，线程函数为 TestThread，使用默认的线程属性，不接收线程 ID</span></span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="线程">线程</h2><p>线程是程序中的一条独立的控制流，线程是SylixOS调度器进行任务调度的基本单位，每个线程都有一个独一无二的ID号、栈、线程控制块（TCB）。</p>
<p>为了管理线程，SylixOS会为每一个线程分配一个线程控制块，用于记录该线程的]]>
    </summary>
    
      <category term="SylixOS" scheme="jiaojinxing.github.io/tags/SylixOS/"/>
    
      <category term="SylixOS" scheme="jiaojinxing.github.io/categories/SylixOS/"/>
    
  </entry>
  
</feed>