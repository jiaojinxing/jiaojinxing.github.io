<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[JinXing’s blog]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="jiaojinxing.github.io/"/>
  <updated>2015-06-19T06:39:23.994Z</updated>
  <id>jiaojinxing.github.io/</id>
  
  <author>
    <name><![CDATA[jiaojinxing]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[SylixOS for ARMv7-M]]></title>
    <link href="jiaojinxing.github.io/2015/06/19/SylixOS-for-ARMv7-M/"/>
    <id>jiaojinxing.github.io/2015/06/19/SylixOS-for-ARMv7-M/</id>
    <published>2015-06-19T03:22:13.000Z</published>
    <updated>2015-06-19T06:39:23.994Z</updated>
    <content type="html"><![CDATA[<p>最初 SylixOS 在 ARM7 上跑，后来更高级的 ARM 处理器开始变得流行，这些高级的 ARM 处理器一般带有 MMU(内存管理单元)和 Cache(高速缓存)。</p>
<p>SylixOS 为了发挥这些高级处理器特性(如 Cache)，支持 MMU 变得迫切，2008 年 SylixOS 开始支持页式虚拟内存管理和 MMU 及 Cache。</p>
<p>在很长的一段时间， SylixOS 都跑在这些带有 MMU 和 Cache 的 ARM 处理器，反而不能在不带有 MMU 的 ARM 处理器上跑。</p>
<p>随着 ARM 公司的 Cortex-M4 和 Cortex-M7 核心的发布，各大 MCU 芯片公司也推出了很多高性能的基于 Cortex-M4 和 Cortex-M7 核心的 MCU 芯片。</p>
<p>虽然这些 MCU 芯片不像 Cortex-A 系列处理器那样性能强大和带有 MMU，但它们的性能已经能满足一般的嵌入式应用。并且它们一般带有 MPU(内存保护单元)、VFP(矢量浮点处理单元)、大容量的片内 Flash、外扩内存(如 SDRAM)接口、DSP(数字信号处理器），甚至它们还带有 Cache。</p>
<p>SylixOS 组织意识到这可能是个趋势，2014 年年末我们重新检查了 SylixOS VMM(虚拟内存管理) 与 MMU 的配置宏，SylixOS 终于又支持不带 MMU 的处理器了。</p>
<p>由于 Cortex-M 系列核心的架构(ARMV7-M)和普通的 ARM 处理器有所差异，所以现有的 SylixOS ARM ARCH 层的代码并不能直接用于 Cortex-M 系列处理器上。</p>
<p>经过两天的努力，终于让 SylixOS ARM ARCH 层支持 ARMV7-M 架构，支持 ARMV7-M 架构的 SylixOS Base 工程放在这里：</p>
<p><a href="https://github.com/jiaojinxing/sylixos-base-armv7m" target="_blank" rel="external">https://github.com/jiaojinxing/sylixos-base-armv7m</a></p>
<p>有了支持 ARMV7-M 架构的 SylixOS Base 工程，剩下的工作就是针对一款 Cortex-M 系列的 MCU 芯片编写 BSP(板载支持包)了，</p>
<p>我们选择的是 Qemu 虚拟机支持的 Olimex STM32 p103 Dev Board(简称stm32-p103 开发板)，</p>
<p>Qemu 的地址：</p>
<p><a href="https://github.com/beckus/qemu_stm32" target="_blank" rel="external">https://github.com/beckus/qemu_stm32</a></p>
<p>由于 SylixOS 默认的配置对内存的消耗比较大，所以我们修改了 Qemu 的代码，调整 stm32-p103 开发板的 Flash 空间大小为 8 MByte、SDRAM 空间大小为 64 MByte。</p>
<p>同时我们也优化了 SylixOS 的配置，极大地降低了 SylixOS 对内存和 Flash 的需求。</p>
<p>现在 Release 版本的 stm32-p103 开发板 BSP 生成的操作系统镜像其节区大小信息如下：<br><figure class="highlight dns"><table><tr><td class="code"><pre><span class="line">   text	   data	    bss	    dec	    hex	filename</span><br><span class="line"><span class="number">1477064</span>	 <span class="number">151188	104342</span><span class="number">8	2671680</span>	 28c440	./Release/bspstm32.elf</span><br></pre></td></tr></table></figure></p>
<p>也就是说，我们可以在只有 2MB Flash 和 2MB SDRAM 的 Cortex-M 系列目标系统运行功能完整的 SylixOS 操作系统了。</p>
<p>如果我们继续裁减掉一些不必要的组件，应该能将 Flash 和 SDRAM 的需求降低到 1MB 以内。</p>
<p>启动后，256 KB 大小的内核堆使用情况：<br><figure class="highlight brainfuck"><table><tr><td class="code"><pre><span class="line"><span class="title">[</span><span class="comment">unknown@sylixos_station:/</span><span class="title">]</span><span class="comment">#</span> <span class="comment">free</span></span><br><span class="line"><span class="comment">heap</span> <span class="comment">show</span> &gt;&gt;</span><br><span class="line"></span><br><span class="line">     <span class="comment">HEAP</span>         <span class="comment">TOTAL</span>      <span class="comment">USED</span>     <span class="comment">MAX</span> <span class="comment">USED</span>  <span class="comment">SEGMENT</span> <span class="comment">USED</span></span><br><span class="line"><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span> <span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span> <span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span> <span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span> <span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span> <span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span></span><br><span class="line"><span class="comment">kersys</span>             <span class="comment">262144</span>     <span class="comment">120856</span>     <span class="comment">160336</span>     <span class="comment">740</span>  <span class="comment">46%</span></span><br></pre></td></tr></table></figure></p>
<p>堆栈消耗情况：<br><figure class="highlight prolog"><table><tr><td class="code"><pre><span class="line">[<span class="atom">unknown</span>@<span class="atom">sylixos_station</span>:/]# <span class="atom">ss</span></span><br><span class="line"><span class="atom">thread</span> <span class="atom">stack</span> <span class="atom">usage</span> <span class="atom">show</span> &gt;&gt;</span><br><span class="line"></span><br><span class="line">       <span class="name">NAME</span>        <span class="name">TID</span>   <span class="name">PRI</span> <span class="name">STK</span> <span class="name">USE</span>  <span class="name">STK</span> <span class="name">FREE</span> <span class="name">USED</span></span><br><span class="line">---------------- ------- --- -------- -------- ----</span><br><span class="line"><span class="atom">t_idle</span>           <span class="number">4010000</span> <span class="number">255</span>      <span class="number">144</span>      <span class="number">880</span>  <span class="number">14</span><span class="comment">%</span></span><br><span class="line"><span class="atom">t_itimer</span>         <span class="number">4010001</span>  <span class="number">20</span>      <span class="number">272</span>     <span class="number">1776</span>  <span class="number">13</span><span class="comment">%</span></span><br><span class="line"><span class="atom">t_except</span>         <span class="number">4010002</span>   <span class="number">0</span>      <span class="number">336</span>     <span class="number">1712</span>  <span class="number">16</span><span class="comment">%</span></span><br><span class="line"><span class="atom">t_log</span>            <span class="number">4010003</span>  <span class="number">60</span>      <span class="number">424</span>     <span class="number">1624</span>  <span class="number">20</span><span class="comment">%</span></span><br><span class="line"><span class="atom">t_power</span>          <span class="number">4010004</span> <span class="number">254</span>      <span class="number">264</span>     <span class="number">1784</span>  <span class="number">12</span><span class="comment">%</span></span><br><span class="line"><span class="atom">t_hotplug</span>        <span class="number">4010005</span> <span class="number">250</span>      <span class="number">344</span>     <span class="number">3752</span>   <span class="number">8</span><span class="comment">%</span></span><br><span class="line"><span class="atom">t_reclaim</span>        <span class="number">4010007</span> <span class="number">253</span>      <span class="number">304</span>     <span class="number">3792</span>   <span class="number">7</span><span class="comment">%</span></span><br><span class="line"><span class="atom">t_netjob</span>         <span class="number">4010008</span> <span class="number">110</span>      <span class="number">328</span>     <span class="number">3768</span>   <span class="number">8</span><span class="comment">%</span></span><br><span class="line"><span class="atom">t_netproto</span>       <span class="number">4010009</span> <span class="number">110</span>      <span class="number">448</span>     <span class="number">3648</span>  <span class="number">10</span><span class="comment">%</span></span><br><span class="line"><span class="atom">t_tftpd</span>          <span class="number">401000</span><span class="atom">a</span> <span class="number">160</span>     <span class="number">2004</span>     <span class="number">6188</span>  <span class="number">24</span><span class="comment">%</span></span><br><span class="line"><span class="atom">t_ftpd</span>           <span class="number">401000</span><span class="atom">b</span> <span class="number">160</span>     <span class="number">1724</span>    <span class="number">10564</span>  <span class="number">14</span><span class="comment">%</span></span><br><span class="line"><span class="atom">t_telnetd</span>        <span class="number">401000</span><span class="atom">c</span> <span class="number">160</span>     <span class="number">1708</span>     <span class="number">4436</span>  <span class="number">27</span><span class="comment">%</span></span><br><span class="line"><span class="atom">t_tshell</span>         <span class="number">401000</span><span class="atom">e</span> <span class="number">150</span>     <span class="number">2408</span>     <span class="number">5784</span>  <span class="number">29</span><span class="comment">%</span></span><br><span class="line"></span><br><span class="line"><span class="atom">interrupt</span> <span class="atom">stack</span> <span class="atom">usage</span> <span class="atom">show</span> &gt;&gt;</span><br><span class="line"></span><br><span class="line"><span class="name">CPU</span> <span class="name">STK</span> <span class="name">USE</span>  <span class="name">STK</span> <span class="name">FREE</span> <span class="name">USED</span></span><br><span class="line">--- -------- -------- ----</span><br><span class="line">  <span class="number">0</span>      <span class="number">228</span>     <span class="number">1820</span>  <span class="number">11</span><span class="comment">%</span></span><br></pre></td></tr></table></figure></p>
<p>内核对象消耗情况：<br><figure class="highlight tcl"><table><tr><td class="code"><pre><span class="line">[<span class="keyword">unknown</span>@sylixos_station:/]# cat /<span class="keyword">proc</span>/kernel/objects<span class="symbol"></span><br><span class="line">object</span> <span class="symbol">     total</span> <span class="symbol">   used</span> <span class="symbol">    max-used</span></span><br><span class="line">event       128      83       84<span class="symbol"></span><br><span class="line">eventset</span>    4        0        0<span class="symbol"></span><br><span class="line">heap</span>        4        1        1<span class="symbol"></span><br><span class="line">msgqueue</span>    10       6        6<span class="symbol"></span><br><span class="line">partition</span>   10       5        5<span class="symbol"></span><br><span class="line">rms</span>         4        1        1<span class="symbol"></span><br><span class="line">thread</span>      64       13       14<span class="symbol"></span><br><span class="line">threadvar</span>   4        0        0<span class="symbol"></span><br><span class="line">timer</span>       4        1        1<span class="symbol"></span><br><span class="line">dpma</span>        1        0        0<span class="symbol"></span><br><span class="line">threadpool</span>  1        0        0</span><br></pre></td></tr></table></figure></p>
<p>来张 Qemu 和 Shell 的爆照：<br><img src="/img/SylixOS-for-ARMv7-M/SylixOS-shell.png" alt="SylixOS-shell.png"></p>
<p>下一步业余时间计划是移植到 STMicroelectronics 公司的 STM32F429I-DISCO 开发板，<br>在其上运行 JavaScript 脚本引擎，并尝试跑一些 IoT 协议接入到国内的物联云，这一定比较新奇和有趣，愿意一起折腾的可以联系我:-)</p>
<p>STM32F429I-DISCO 开发板用户手册：<br><a href="http://www.st.com/st-web-ui/static/active/cn/resource/technical/document/user_manual/DM00092920.pdf" target="_blank" rel="external">http://www.st.com/st-web-ui/static/active/cn/resource/technical/document/user_manual/DM00092920.pdf</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>最初 SylixOS 在 ARM7 上跑，后来更高级的 ARM 处理器开始变得流行，这些高级的 ARM 处理器一般带有 MMU(内存管理单元)和 Cache(高速缓存)。</p>
<p>SylixOS 为了发挥这些高级处理器特性(如 Cache)，支持 MMU 变得迫切，2]]>
    </summary>
    
      <category term="SylixOS" scheme="jiaojinxing.github.io/tags/SylixOS/"/>
    
      <category term="SylixOS" scheme="jiaojinxing.github.io/categories/SylixOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[分享一些 SylixOS 开源项目]]></title>
    <link href="jiaojinxing.github.io/2015/06/09/%E5%88%86%E4%BA%AB%E4%B8%80%E4%BA%9B-SylixOS-%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/"/>
    <id>jiaojinxing.github.io/2015/06/09/分享一些-SylixOS-开源项目/</id>
    <published>2015-06-09T08:21:15.000Z</published>
    <updated>2015-06-19T06:39:19.403Z</updated>
    <content type="html"><![CDATA[<ol>
<li><p>图片类<br>libpng            : <a href="https://github.com/jiaojinxing/libpng" target="_blank" rel="external">PNG图片编解码库</a><br>libjpeg-turbo     : <a href="https://github.com/jiaojinxing/libjpeg-turbo" target="_blank" rel="external">JPEG图片编解码库</a></p>
</li>
<li><p>通信类<br>libSOME           : <a href="https://github.com/jiaojinxing/libSOEM" target="_blank" rel="external">Simple Open EtherCAT Master库</a><br>libosip           : <a href="https://github.com/jiaojinxing/libosip" target="_blank" rel="external">小型的用C实现的SIP协议栈库</a><br>libexosip         : <a href="https://github.com/jiaojinxing/libexosip" target="_blank" rel="external">osip扩展库</a></p>
</li>
<li><p>游戏类<br>chocolate-doom    : <a href="https://github.com/jiaojinxing/chocolate-doom" target="_blank" rel="external">doom游戏</a><br>libsdl            : <a href="https://github.com/jiaojinxing/libsdl" target="_blank" rel="external">SDL库</a></p>
</li>
<li><p>脚本引擎类<br>tiny-c-interpreter: <a href="https://github.com/jiaojinxing/tiny-c-interpreter" target="_blank" rel="external">一个小型的C语言解析器</a></p>
</li>
<li><p>工具类<br>gsnap             : <a href="https://github.com/jiaojinxing/gsnap" target="_blank" rel="external">一个截屏程序</a><br>libgooglepinyin   : <a href="https://github.com/jiaojinxing/libgooglepinyin" target="_blank" rel="external">Google拼音输入法库</a></p>
</li>
<li><p>Qt类<br>QtAV              : <a href="https://github.com/jiaojinxing/QtAV" target="_blank" rel="external">基于Qt和FFmpeg的跨平台高性能音视频播放框架</a><br>qwt               : <a href="https://github.com/jiaojinxing/qwt" target="_blank" rel="external">Qt 2D仪表库</a></p>
</li>
<li><p>UI类<br>libemwin          : <a href="https://github.com/jiaojinxing/libemwin" target="_blank" rel="external">可以免费用于NXP芯片的emWin库</a></p>
</li>
<li><p>测试类<br>netio             : <a href="https://github.com/jiaojinxing/netio" target="_blank" rel="external">网络性能测试程序</a><br>qtperf            : <a href="https://github.com/jiaojinxing/qtperf" target="_blank" rel="external">Qt性能测试程序</a><br>posixtestsuite    : <a href="https://github.com/jiaojinxing/posixtestsuite" target="_blank" rel="external">POSIX标准测试套件</a><br>byte-unixbench    : <a href="https://github.com/jiaojinxing/byte-unixbench" target="_blank" rel="external">UNIX benchmark套件</a></p>
</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<ol>
<li><p>图片类<br>libpng            : <a href="https://github.com/jiaojinxing/libpng" target="_blank" rel="external">PNG图片编解码库</a><br>libjp]]>
    </summary>
    
      <category term="SylixOS" scheme="jiaojinxing.github.io/tags/SylixOS/"/>
    
      <category term="SylixOS" scheme="jiaojinxing.github.io/categories/SylixOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="jiaojinxing.github.io/2015/06/04/hello-world/"/>
    <id>jiaojinxing.github.io/2015/06/04/hello-world/</id>
    <published>2015-06-04T03:15:49.339Z</published>
    <updated>2015-06-04T03:15:49.339Z</updated>
    <content type="html"><![CDATA[<p>Markdown 编辑器：<a href="https://stackedit.io/editor" target="_blank" rel="external">https://stackedit.io/editor</a>   <a href="https://www.zybuluo.com/mdeditor（在线）" target="_blank" rel="external">https://www.zybuluo.com/mdeditor（在线）</a> </p>
<p>Markdown 语法：<a href="http://wowubuntu.com/markdown/（中文）" target="_blank" rel="external">http://wowubuntu.com/markdown/（中文）</a></p>
<p>github page 博客不支持的 Markdown 编辑器语法有: 注脚、flow 流程图、seq 序列图</p>
<p>plantuml 语法：<a href="http://plantuml.sourceforge.net/" target="_blank" rel="external">http://plantuml.sourceforge.net/</a></p>
<p>PC 上使用 Eclipse 插件 plantuml - <a href="http://plantuml.sourceforge.net/updatesite/" target="_blank" rel="external">http://plantuml.sourceforge.net/updatesite/</a> </p>
<p>plantuml 生成 UML 图的例子：</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">&#123;% plantuml %&#125;</span><br><span class="line"></span><br><span class="line"><span class="annotation">@startuml</span></span><br><span class="line">Alice -&gt; <span class="string">Bob:</span> Authentication Request</span><br><span class="line">Bob --&gt; <span class="string">Alice:</span> Authentication Response</span><br><span class="line"></span><br><span class="line">Alice -&gt; <span class="string">Bob:</span> Another authentication Request</span><br><span class="line">Alice &lt;-- <span class="string">Bob:</span> another authentication Response</span><br><span class="line"><span class="annotation">@enduml</span></span><br><span class="line"></span><br><span class="line">&#123;% endplantuml %&#125;</span><br></pre></td></tr></table></figure>
<img src="http://www.plantuml.com/plantuml/svg/TSx13O0W38NXErDqWIvWZ057S0F49f9WKIZxIyIJmVFxykVfB3P9EO8omJi2d62Ewm2co4uitbdnaM6Xgr0MLJV0QXxSKVcCd4bzOnohIs3xqOP7nARjdtxZcdYhXsy0">
<p>plantuml 使用 DOT 语法生成流程图的例子：</p>
<figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line">&#123;% plantuml %&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">@startuml</span></span><br><span class="line"><span class="label">digraph</span> G &#123;</span><br><span class="line">    <span class="keyword">subgraph </span>cluster0 &#123;</span><br><span class="line">        node [style<span class="label">=filled</span>,color<span class="label">=white</span>]<span class="comment">;</span></span><br><span class="line">        style<span class="label">=filled</span><span class="comment">;</span></span><br><span class="line">        color<span class="label">=lightgrey</span><span class="comment">;</span></span><br><span class="line">        a0 -&gt; <span class="literal">a1</span> -&gt; <span class="literal">a2</span> -&gt; <span class="literal">a3</span><span class="comment">;</span></span><br><span class="line">        label = <span class="string">"process #1"</span><span class="comment">;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">subgraph </span>cluster1 &#123;</span><br><span class="line">        node [style<span class="label">=filled</span>]<span class="comment">;</span></span><br><span class="line">        <span class="keyword">b0 </span>-&gt; <span class="keyword">b1 </span>-&gt; <span class="keyword">b2 </span>-&gt; <span class="keyword">b3;</span><br><span class="line"></span>        label = <span class="string">"process #2"</span><span class="comment">;</span></span><br><span class="line">        color<span class="label">=blue</span></span><br><span class="line">    &#125;</span><br><span class="line">    start -&gt; a0<span class="comment">;</span></span><br><span class="line">    start -&gt; <span class="keyword">b0;</span><br><span class="line"></span>    <span class="literal">a1</span> -&gt; <span class="keyword">b3;</span><br><span class="line"></span>    <span class="keyword">b2 </span>-&gt; <span class="literal">a3</span><span class="comment">;</span></span><br><span class="line">    <span class="literal">a3</span> -&gt; a0<span class="comment">;</span></span><br><span class="line">    <span class="literal">a3</span> -&gt; <span class="preprocessor">end</span><span class="comment">;</span></span><br><span class="line">    <span class="keyword">b3 </span>-&gt; <span class="preprocessor">end</span><span class="comment">;</span></span><br><span class="line">    start [shape<span class="label">=Mdiamond</span>]<span class="comment">;</span></span><br><span class="line">    <span class="preprocessor">end</span> [shape<span class="label">=Msquare</span>]<span class="comment">;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">@enduml</span></span><br><span class="line"></span><br><span class="line">&#123;% endplantuml %&#125;</span><br></pre></td></tr></table></figure>
<img src="http://www.plantuml.com/plantuml/svg/VL7BReD03Bpp5HQvfX8anuWgjvxo1QW76rnOoM79FbH5KVuzi4i2L5LyiEJnxCxOFbg7nlcp9BLg3FOjVC4jWI6ifmXKugrZaqtu69sk6KhhhiB5ZnBXUbjfqQRuRPNZxyEBkAJCQEIAQbhN6BxE3SpWunCm3taNydxk2X8B593sHbTiBMpoD7Rl_phEtpfUkAGWIq6MWYozbTsbVsSXyRnqCYursCyEQu0c8CxubA7LhBXVFeqLTzF-Q5t6ZqlROi_5gLPurjrpj87qwjYBHpDUvfuS1tmu-0C0">
<p>也可以使用 Graphviz <a href="http://www.graphviz.org/" target="_blank" rel="external">http://www.graphviz.org/</a> ，而不使用 plantuml 插件，但只能用 DOT 语法。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Markdown 编辑器：<a href="https://stackedit.io/editor" target="_blank" rel="external">https://stackedit.io/editor</a>   <a href="https://www.]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[SylixOS线程]]></title>
    <link href="jiaojinxing.github.io/2015/06/02/SylixOS-thread/"/>
    <id>jiaojinxing.github.io/2015/06/02/SylixOS-thread/</id>
    <published>2015-06-02T07:45:26.766Z</published>
    <updated>2015-06-02T07:45:26.766Z</updated>
    <content type="html"><![CDATA[<h2 id="线程">线程</h2><p>线程是程序中的一条独立的控制流，线程是SylixOS调度器进行任务调度的基本单位，每个线程都有一个独一无二的ID号、栈、线程控制块（TCB）。</p>
<p>为了管理线程，SylixOS会为每一个线程分配一个线程控制块，用于记录该线程的信息，如线程入口函数、线程优化级、线程名字、线程当前的堆栈指针等。</p>
<p>线程入口函数可以调用其它函数，函数内定义的局部变量将从它自己的栈里分配，所以不同的线程可以有相同的线程入口函数，但又独立运行。</p>
<p>线程栈可以由用户自己分配，也可以操作系统代为分配，线程栈的大小不应改过少（容易造成栈溢出），也不应该过大（造成浪费）。</p>
<p>线程ID在线程被创建时决定，是线程的标识符。</p>
<p>线程优先级和调度策略是SylixOS调度器进行任务调度的参数，SylixOS是一个实时操作系统（RTOS），始终运行一个优先级最高的就绪态任务。</p>
<h2 id="线程的基本状态">线程的基本状态</h2><p>线程的基本状态有如下几种：</p>
<ol>
<li>初始化          创建线程过程中线程的状态</li>
<li>就绪            线程可以运行的状态</li>
<li>等待            线程需要等行某些事件而不能继续的状态</li>
<li>僵死状态        线程退出后处理的状态</li>
</ol>
<p><img src="/img/SylixOS-thread/threadstatus.png" alt="threadstatus.png"></p>
<h2 id="线程优先级">线程优先级</h2><p>线程优先级的范围处决于操作系统的配置，默认是0~255，0是最高优先级，255是最低优先级:</p>
<figure class="highlight gherkin"><table><tr><td class="code"><pre><span class="line"><span class="comment">#define LW_PRIO_HIGHEST         0                                       /*  SylixOS 最高优先级          */</span></span><br><span class="line"><span class="comment">#define LW_PRIO_LOWEST          255                                     /*  SylixOS 最低优先级          */</span></span><br><span class="line"></span><br><span class="line">/<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line">    优先级 (一般应用的最高优先级不能高于 LW_PRIO_CRITICAL 最低不能低过 LW_PRIO_LOW)</span><br><span class="line"><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>/</span><br><span class="line">     </span><br><span class="line"><span class="comment">#define LW_PRIO_EXTREME         LW_PRIO_HIGHEST                         /*  最高优先级                  */</span></span><br><span class="line"><span class="comment">#define LW_PRIO_CRITICAL        50                                      /*  关键处理任务                */</span></span><br><span class="line"><span class="comment">#define LW_PRIO_REALTIME        100                                     /*  实时处理任务                */</span></span><br><span class="line"><span class="comment">#define LW_PRIO_HIGH            150                                     /*  高优先级任务                */</span></span><br><span class="line"><span class="comment">#define LW_PRIO_NORMAL          200                                     /*  正常优先级                  */</span></span><br><span class="line"><span class="comment">#define LW_PRIO_LOW             250                                     /*  低优先级                    */</span></span><br><span class="line"><span class="comment">#define LW_PRIO_IDLE            LW_PRIO_LOWEST                          /*  最低优先级                  */</span></span><br></pre></td></tr></table></figure>
<h2 id="线程调度策略">线程调度策略</h2><p>SylixOS支持同优先级线程，同优先级线程的调度策略取决于当前线程的调度策略，如果当前线程的调度策略为先来先服务（FIFO），</p>
<p>那么必须等当前线程的阻塞时，同优先级的其它线程才有机会运行；如果当前线程的调度策略为轮转（RR），</p>
<p>则当当前线程的时间片用完时或当前线程的阻塞时，同优先级的其它线程才有机会运行。</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="hexcolor">#def</span>ine  LW_OPTION_SCHED_FIFO                           <span class="number">0</span>x01            <span class="comment">/*  调度器 FIFO                 */</span></span><br><span class="line"><span class="hexcolor">#def</span>ine  LW_OPTION_SCHED_RR                             <span class="number">0</span>x00            <span class="comment">/*  调度器 RR                   */</span></span><br></pre></td></tr></table></figure>
<h2 id="线程相关_API">线程相关 API</h2><p>SylixOS 提供了一套 POSIX 线程 API，其接口定义和行为完全符合 POSIX 线程标准，方便了现有 POSIX 程序移植到 SylixOS 上，</p>
<p>关于 POSIX 线程的编程，市面上有很多书籍，网上也已经有很多资料，这里不再详述，POSIX 线程的编程可以参考这篇文章 <a href="https://computing.llnl.gov/tutorials/pthreads/" target="_blank" rel="external">https://computing.llnl.gov/tutorials/pthreads/</a></p>
<p>SylixOS 系统内部线程 API 的命名一般以 API_Thread 开始，API 的声明位于 libsylixos/SylixOS/kernel/include/k_api.h 文件，</p>
<p>为了适应不同语言习惯的人，也提供了一套以 Lw_ 开头的 API，请查看 libsylixos/SylixOS/api 目录下的头文件。</p>
<h2 id="内部线程_API_相关的数据类型">内部线程 API 相关的数据类型</h2><figure class="highlight gherkin"><table><tr><td class="code"><pre><span class="line">线程句柄  LW_OBJECT_HANDLE</span><br><span class="line">线程 ID   LW_OBJECT_ID</span><br><span class="line">线程属性  LW_CLASS_THREADATTR，<span class="keyword">*</span>PLW_CLASS_THREADATTR</span><br><span class="line">线程函数  PTHREAD_START_ROUTINE</span><br></pre></td></tr></table></figure>
<p>其中 线程函数 PTHREAD_START_ROUTINE 的类型需要理解，它被定义为如下的函数指针：</p>
<figure class="highlight lisp"><table><tr><td class="code"><pre><span class="line">typedef PVOID       <span class="list">(<span class="keyword">*PTHREAD_START_ROUTINE</span>)</span><span class="list">(<span class="keyword">PVOID</span> pvArg)</span><span class="comment">;              /*  系统线程类型定义            */</span></span><br></pre></td></tr></table></figure>
<p>所以线程函数一般形如：</p>
<figure class="highlight inform7"><table><tr><td class="code"><pre><span class="line">PVOID  thread_func (PVOID pvArg)</span><br><span class="line">&#123;</span><br><span class="line">    // do <span class="keyword">thing</span>...</span><br><span class="line">    return  NULL;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="一分钟实验">一分钟实验</h2><figure class="highlight openscad"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">#</span><span class="preprocessor"><span class="keyword">include</span> &lt;SylixOS.h&gt;</span> <span class="comment">// 包含 SylixOS.h 头文件</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">/*</span><br><span class="line">  * 测试用线程函数</span><br><span class="line"> */</span></span><br><span class="line">PVOID  TestThread <span class="params">(PVOID  pvArg)</span></span><br><span class="line">&#123;</span><br><span class="line">    while <span class="params">(<span class="number">1</span>)</span> &#123;</span><br><span class="line">     		printf<span class="params">(<span class="string">"hello in thread\n"</span>)</span>;</span><br><span class="line">     		sleep<span class="params">(<span class="number">1</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">     </span><br><span class="line">LW_OBJECT_HANDLE  hThread; <span class="comment">// 定义线程句柄</span></span><br><span class="line">      </span><br><span class="line">hThread = API_ThreadCreate<span class="params">(<span class="string">"t_test"</span>, TestThread, NULL, NULL)</span>; <span class="comment">// 创建一个名为 t_test 的线程，线程函数为 TestThread，使用默认的线程属性，不接收线程 ID</span></span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="线程">线程</h2><p>线程是程序中的一条独立的控制流，线程是SylixOS调度器进行任务调度的基本单位，每个线程都有一个独一无二的ID号、栈、线程控制块（TCB）。</p>
<p>为了管理线程，SylixOS会为每一个线程分配一个线程控制块，用于记录该线程的]]>
    </summary>
    
      <category term="SylixOS" scheme="jiaojinxing.github.io/tags/SylixOS/"/>
    
      <category term="SylixOS" scheme="jiaojinxing.github.io/categories/SylixOS/"/>
    
  </entry>
  
</feed>